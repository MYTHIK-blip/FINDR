from __future__ import annotations
import json
from datetime import date
from ..schema import Opportunity

TEMPLATE = """# {name}
**Location:** {location} · **Email:** {email} · **Phone:** {phone}

## Summary
{summary}

## Target Role
**{title}** at **{org}** ({source}, {region})  
Fit highlights: {fit}

## Skills
{skills}

## Experience
{experience}

## Education & Certifications
{education}

*Generated by FINDR on {today} — tailored to: {role_title}*
"""

def _bullets(items):
    return "\n".join([f"- {x}" for x in items]) if items else "- (add details)"

def build_cv_markdown(profile_path: str, op: Opportunity) -> str:
    prof = json.loads(open(profile_path, "r", encoding="utf-8").read())
    skills = _bullets(prof.get("skills", []))
    experience = _bullets(prof.get("experience", []))
    education = _bullets(prof.get("education", []))
    fit = ", ".join([t for t in (op.category, op.region, op.type) if t]) or "role alignment"

    return TEMPLATE.format(
        name=prof.get("name","Your Name"),
        location=prof.get("geo",{}).get("home","NZ"),
        email=prof.get("contact",{}).get("email","you@example.com"),
        phone=prof.get("contact",{}).get("phone","+64-xxx"),
        summary=prof.get("summary","Motivated and adaptable. Ready to contribute immediately."),
        title=op.title, org=op.org or "Unknown", source=op.source, region=op.region or "NZ",
        skills=skills, experience=experience, education=education,
        today=str(date.today()), role_title=op.title, fit=fit
    )
